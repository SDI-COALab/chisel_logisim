package common

import chisel3._
import chisel3.util._

object Instructions{
    // 加载 / 存储
    val LD_B        = BitPat("b0010100000??????????????????????")
    val LD_H        = BitPat("b0010100001??????????????????????")
    val LD_W        = BitPat("b0010100010??????????????????????")
    val ST_B        = BitPat("b0010100100??????????????????????")
    val ST_H        = BitPat("b0010100101??????????????????????")
    val ST_W        = BitPat("b0010100110??????????????????????")

    // 加法
    val ADD_W       = BitPat("b00000000000100000???????????????")
    val ADDI_W      = BitPat("b0000001010??????????????????????")

    // 减法
    val SUB_W       = BitPat("b00000000000100010???????????????")

    // 移位
    val SRL_W       = BitPat("b00000000000101111???????????????")
    val SRA_W       = BitPat("b00000000000110000???????????????")

    // 条件分支

    val BEQ         = BitPat("b010110??????????????????????????")
    val BGE         = BitPat("b011001??????????????????????????")
    val BL          = BitPat("b010101??????????????????????????")
    val BLTU        = BitPat("b011010??????????????????????????")

    // 跳转
    val JIRL        = BitPat("b010011??????????????????????????")

    // 立即数加载
    val LUI21_W     = BitPat("b0001010?????????????????????????")

    //
    val SLTI        = BitPat("b0000001000??????????????????????")
    val SRLI_W      = BitPat("b00000000010010001???????????????")
}